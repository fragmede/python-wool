#!/usr/bin/env python3
print("Using Python-Wool")

import sys
import subprocess
import os

if len(sys.argv) == 1:
    os.execvp("python", ["python"])

def is_venv(path):
    return os.path.isfile(os.path.join(path, 'pyvenv.cfg'))

def find_venv_named(parts, name):
    p_copy = parts.copy()
    p_copy.append(name)
    path = os.sep.join(p_copy)
    print('  Searched {}'.format(path))
    if not os.path.exists(path):
        if len(parts) > 2:
            return find_venv_named(parts[:-1], name)
        return False
    if is_venv(path):
        print("  Found venv at {}".format(path))
        site_packages = os.path.join(path, 'lib', os.listdir(path+os.sep+'lib')[0], 'site-packages')
        print("  Using site-packages: {}".format(site_packages))
        os.environ['PYTHONPATH'] = site_packages
        os.execvp("python", sys.argv)
    return False

def find_venv_all_names(path):
    find_venv_named(path, 'venv')
    find_venv_named(path, '.venv')
    find_venv_named(path, 'env')
    find_venv_named(path, 'virtualenv')
    find_venv_named(path, '.virtualenv')

# Look in the program's directory.
find_venv_all_names(os.path.expanduser(sys.argv[1]).split(os.sep))

# Check current directory for one as well.
cwd = os.getcwd()
parts = cwd.split(os.sep)
find_venv_all_names(parts)

# try the system one
print('  Python-wool did not find a venv (no pyvenv.cfg found), running normally.')
os.execvp("python", sys.argv)
